<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Script on Min Soe Han</title><link>https://minsoehan.com/categories/script/</link><description>Recent content in Script on Min Soe Han</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 24 Aug 2025 07:52:22 +0630</lastBuildDate><atom:link href="https://minsoehan.com/categories/script/index.xml" rel="self" type="application/rss+xml"/><item><title>Turning Google Sheets into a Simple JSON API with Google Apps Script</title><link>https://minsoehan.com/tech/google-sheets-simple-json-api/</link><pubDate>Sun, 24 Aug 2025 07:52:22 +0630</pubDate><guid>https://minsoehan.com/tech/google-sheets-simple-json-api/</guid><description>&lt;p>Google Sheets isn’t just for storing data—it can also act as a lightweight database for your projects. With a few lines of Google Apps Script, you can transform your spreadsheet into a JSON API that any web app, static site, or script can consume.&lt;/p>
&lt;p>In this post, we’ll walk through a script that reads a Google Sheet and serves its content as JSON.&lt;/p>
&lt;h3 class="mt3rem" id="why-use-google-sheets-as-a-json-api">Why Use Google Sheets as a JSON API?&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>No extra server required&lt;/strong>: Everything runs inside Google Apps Script, hosted by Google.&lt;/li>
&lt;li>&lt;strong>Friendly interface&lt;/strong>: Non-technical users can update the data directly in Google Sheets.&lt;/li>
&lt;li>&lt;strong>Free &amp;amp; fast&lt;/strong>: For small projects, it’s cost-effective and quick to set up.&lt;/li>
&lt;li>&lt;strong>Integration ready&lt;/strong>: Your frontend or external services can fetch structured data via a simple endpoint.&lt;/li>
&lt;/ul>
&lt;h3 class="mt3rem" id="the-code">The Code&lt;/h3>
&lt;p>Here’s the complete Google Apps Script function:&lt;/p></description></item><item><title>Build Script for Cloudflare and Hugo</title><link>https://minsoehan.com/tech/build-script-for-cloudflare-and-hugo/</link><pubDate>Fri, 08 Aug 2025 16:35:50 +0630</pubDate><guid>https://minsoehan.com/tech/build-script-for-cloudflare-and-hugo/</guid><description>&lt;p>In Cloudflare Pages → Project Settings → Build Configuration, I can set the Framework preset to &lt;code>Hugo&lt;/code>, the Build command to &lt;code>hugo&lt;/code>, and the Build output directory to &lt;code>public&lt;/code>. That’s the default when selecting Hugo.&lt;/p>
&lt;p>However, when using Pagefind, even though I can set the Build command to &lt;code>hugo &amp;amp;&amp;amp; npx pagefind --site &amp;quot;public&amp;quot;&lt;/code>, it’s not quite satisfying. This is because, on every build, Cloudflare runs &lt;code>hugo&lt;/code>, installs Pagefind, and then runs &lt;code>npx pagefind --site &amp;quot;public&amp;quot;&lt;/code> again — which takes a long time.&lt;/p></description></item></channel></rss>